// Code generated by "stringer -type Token"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ILLEGAL-0]
	_ = x[EOF-1]
	_ = x[COMMENT-2]
	_ = x[ADD-3]
	_ = x[SUB-4]
	_ = x[MUL-5]
	_ = x[QUO-6]
	_ = x[REM-7]
	_ = x[AND-8]
	_ = x[OR-9]
	_ = x[XOR-10]
	_ = x[LPAREN-11]
	_ = x[RPAREN-12]
	_ = x[LBRACK-13]
	_ = x[RBRACK-14]
	_ = x[LBRACE-15]
	_ = x[RBRACE-16]
	_ = x[SEMICOLON-17]
	_ = x[COLON-18]
	_ = x[IDENT-19]
	_ = x[INT-20]
	_ = x[FLOAT-21]
	_ = x[STRING-22]
	_ = x[DEF-23]
	_ = x[END-24]
	_ = x[IF-25]
	_ = x[ELSE-26]
	_ = x[RETURN-27]
}

const _Token_name = "ILLEGALEOFCOMMENTADDSUBMULQUOREMANDORXORLPARENRPARENLBRACKRBRACKLBRACERBRACESEMICOLONCOLONIDENTINTFLOATSTRINGDEFENDIFELSERETURN"

var _Token_index = [...]uint8{0, 7, 10, 17, 20, 23, 26, 29, 32, 35, 37, 40, 46, 52, 58, 64, 70, 76, 85, 90, 95, 98, 103, 109, 112, 115, 117, 121, 127}

func (i Token) String() string {
	if i < 0 || i >= Token(len(_Token_index)-1) {
		return "Token(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Token_name[_Token_index[i]:_Token_index[i+1]]
}
